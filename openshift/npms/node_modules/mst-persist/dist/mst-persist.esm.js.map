{"version":3,"file":"mst-persist.esm.js","sources":["../src/asyncLocalStorage.ts","../src/index.ts"],"sourcesContent":["// using istanbul ignore on portions of code that are not currently used internally\n\ninterface IAsyncLocalStorage {\n  clear(): Promise<void>\n  getItem(key: string): Promise<string>\n  removeItem(key: string): Promise<void>\n  setItem(key: string, value: string): Promise<void>\n}\n\nexport const AsyncLocalStorage: IAsyncLocalStorage = {\n  // must use wrapper functions when passing localStorage functions (https://github.com/agilgur5/mst-persist/issues/18)\n  clear /* istanbul ignore next */ () {\n    return callWithPromise(() => window.localStorage.clear())\n  },\n  getItem (key) {\n    return callWithPromise(() => window.localStorage.getItem(key))\n  },\n  removeItem /* istanbul ignore next */ (key) {\n    return callWithPromise(() => window.localStorage.removeItem(key))\n  },\n  setItem (key, value) {\n    return callWithPromise(() => window.localStorage.setItem(key, value))\n  }\n}\n\nfunction callWithPromise (func: Function, ...args: any[]): Promise<any> {\n  try {\n    return Promise.resolve(func(...args))\n  } catch (err) {\n    /* istanbul ignore next */\n    return Promise.reject(err)\n  }\n}\n\nexport default AsyncLocalStorage\n","import { onSnapshot, applySnapshot, IStateTreeNode } from 'mobx-state-tree'\n\nimport AsyncLocalStorage from './asyncLocalStorage'\n\nexport interface IArgs {\n  (name: string, store: IStateTreeNode, options?: IOptions): Promise<void>\n}\nexport interface IOptions {\n  storage?: any,\n  jsonify?: boolean,\n  readonly whitelist?: Array<string>,\n  readonly blacklist?: Array<string>\n}\ntype StrToAnyMap = {[key: string]: any}\n\nexport const persist: IArgs = (name, store, options = {}) => {\n  let {storage, jsonify = true, whitelist, blacklist} = options\n\n  // use AsyncLocalStorage by default (or if localStorage was passed in)\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.localStorage !== 'undefined' &&\n    (!storage || storage === window.localStorage)\n  ) {\n    storage = AsyncLocalStorage\n  }\n  if (!storage) {\n    return Promise.reject('localStorage (the default storage engine) is not ' +\n      'supported in this environment. Please configure a different storage ' +\n      'engine via the `storage:` option.')\n  }\n\n  const whitelistDict = arrToDict(whitelist)\n  const blacklistDict = arrToDict(blacklist)\n\n  onSnapshot(store, (_snapshot: StrToAnyMap) => {\n    // need to shallow clone as otherwise properties are non-configurable (https://github.com/agilgur5/mst-persist/pull/21#discussion_r348105595)\n    const snapshot = { ..._snapshot }\n    Object.keys(snapshot).forEach((key) => {\n      if (whitelist && !whitelistDict[key]) {\n        delete snapshot[key]\n      }\n      if (blacklist && blacklistDict[key]) {\n        delete snapshot[key]\n      }\n    })\n\n    const data = !jsonify ? snapshot : JSON.stringify(snapshot)\n    storage.setItem(name, data)\n  })\n\n  return storage.getItem(name)\n    .then((data: object | string) => {\n      const snapshot = !isString(data) ? data : JSON.parse(data)\n      // don't apply falsey (which will error), leave store in initial state\n      if (!snapshot) { return }\n      applySnapshot(store, snapshot)\n    })\n}\n\ntype StrToBoolMap = {[key: string]: boolean}\n\nfunction arrToDict (arr?: Array<string>): StrToBoolMap {\n  if (!arr) { return {} }\n  return arr.reduce((dict: StrToBoolMap, elem) => {\n    dict[elem] = true\n    return dict\n  }, {})\n}\n\nfunction isString (value: any): value is string {\n  return typeof value === 'string'\n}\n\nexport default persist\n"],"names":["AsyncLocalStorage","clear","callWithPromise","window","localStorage","getItem","key","removeItem","setItem","value","func","args","Promise","resolve","err","reject","persist","name","store","options","storage","jsonify","whitelist","blacklist","whitelistDict","arrToDict","blacklistDict","onSnapshot","_snapshot","snapshot","Object","keys","forEach","data","JSON","stringify","then","isString","parse","applySnapshot","arr","reduce","dict","elem"],"mappings":"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"}